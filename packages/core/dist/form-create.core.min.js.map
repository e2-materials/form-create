{"version":3,"file":"form-create.core.min.js","sources":["../../utils/src/index.js","../src/components/formCreate.js","../src/factory/vData.js","../src/factory/creator.js","../src/core/util.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/api.js","../src/core/handle.js","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true,\n                default: () => {\n                    return {};\n                }\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                this.unique += 1;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            const formCreate = this.formCreate;\n\n            formCreate.mounted();\n            this.$emit('input', this.$f);\n\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}","import {$set, extend, isPlainObject, isUndef, toArray, toString} from '@form-create/utils';\n\nfunction defVData() {\n    return {\n        class: {},\n        style: {},\n        attrs: {},\n        props: {},\n        domProps: {},\n        on: {},\n        nativeOn: {},\n        directives: [],\n        scopedSlots: {},\n        slot: undefined,\n        key: undefined,\n        ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            classList.forEach((cls) => {\n                $set(this._data.class, toString(cls), true);\n            });\n        } else if (isPlainObject(classList)) {\n            $set(this._data, 'class', extend(this._data.class, classList));\n        } else {\n            $set(this._data.class, toString(classList), status === undefined ? true : status);\n        }\n\n        return this;\n    }\n\n    directives(directives) {\n        if (isUndef(directives)) return this;\n        $set(this._data, 'directives', this._data.directives.concat(toArray(directives)));\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (!Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        $set(this._data, key, val);\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n\n        if (isPlainObject(obj)) {\n            $set(this._data, key, extend(this._data[key], obj));\n        } else {\n            $set(this._data[key], toString(obj), val);\n        }\n\n        return this;\n    };\n});\n\n","import {$set, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import Creator from '../factory/creator';\n\nexport function toJson(obj) {\n    return JSON.stringify(obj, function (key, val) {\n        if (val instanceof Creator) {\n            return val.getRule();\n        }\n\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return '' + val;\n    });\n}\n\n\nexport function parseJson(json) {\n    return JSON.parse(json, function (k, v) {\n        if (v.indexOf && v.indexOf('function') > -1) {\n            try {\n                return eval('(function(){return ' + v + ' })()')\n            } catch (e) {\n                console.error(`[form-create]解析失败:${v}`);\n                return undefined;\n            }\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\nexport default function makerFactory() {\n    let maker = {};\n\n\n    const commonMaker = creatorFactory('');\n\n    extend(maker, {\n        create(type, field, title) {\n            let make = commonMaker('', field);\n            make._data.type = type;\n            make._data.title = title;\n            return make;\n        },\n        createTmp(template, vm, field, title) {\n            let make = commonMaker('', field);\n            make._data.type = 'template';\n            make._data.template = template;\n            make._data.title = title;\n            make._data.vm = vm;\n            return make;\n        }\n    });\n    maker.template = maker.createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.unique = 'fc_' + id;\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            let parser = this.$handle.parsers[id];\n            if (parser.type === 'hidden') return;\n            return this.renderParser(parser);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n\n        if (this.options.global['*']) {\n            this.toData(parser, this.options.global['*']);\n        }\n        if (this.options.global[parser.type]) {\n            this.toData(parser, this.options.global[parser.type]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (Vue.compile === undefined) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (vn.data === undefined) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        parser.vData.get();\n        this.setGlobalConfig(parser);\n\n        if (!this.cache[parser.id] || parser.type === 'template') {\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        Object.keys(parser.vData._data).forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi);\n\n        if (!custom)\n            data.on('input', (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](this.inputVData(parser), children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](this.inputVData(parser), children);\n        return this.vNode.make(parser.originType, this.inputVData(parser), children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isPlainObject} from '@form-create/utils';\nimport {toJson} from './util';\n\nexport default function baseApi(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let fields = parser.root.map(rule => rule.__field__), index = fields.indexOf(field);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules = h.rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                }\n            }\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.options({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                el[name](args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport baseApi from './api';\nimport {enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.fc = fc;\n        this.id = uniqueId();\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this, this.id);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                if (parser.vm !== this.vm && !parser.deleted)\n                    return console.error(`${_rule.type}规则正在其他的 <form-create> 中使用` + errMsg());\n                parser.update(this);\n                let rule = parser.rule;\n                this.parseOn(rule);\n                this.parseProps(rule);\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', {\n                    get: () => {\n                        return parser.toValue(this.getFormData(parser));\n                    },\n                    set: (value) => {\n                        if (this.isChange(parser, value)) {\n                            this.refresh();\n                            this.$render.clearCache(parser, true);\n                            this.setFormData(parser, parser.toFormValue(value));\n                        }\n                    }\n                });\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    createParser(rule) {\n        const id = this.id + '' + uniqueId(), parsers = this.fc.parsers, type = toString(rule.type).toLocaleLowerCase();\n\n        const Parser = (parsers[type]) ? parsers[type] : BaseParser;\n\n        return new Parser(this, rule, id);\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field} = rule;\n\n        if (!Array.isArray(emit)) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const emitKey = emitPrefix ? emitPrefix : field;\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    notField(id) {\n        return this.parsers[id] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    onInput(parser, value) {\n        if (!this.isNoVal(parser) && this.isChange(parser, parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n        }\n    }\n\n    getParser(id) {\n        if (this.fieldList[id])\n            return this.fieldList[id];\n        else if (this.customData[id])\n            return this.customData[id];\n        else if (this.parsers[id])\n            return this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = this.fc.drive.getGlobalApi(this, baseApi(this));\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n    }\n\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.created();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: '',\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject,\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson} from './util';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {}, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.sumbitBtn))\n            _options.sumbitBtn = {show: _options.sumbitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    return {\n        FormCreate,\n        install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtend} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = handle.id;\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser) {\n        let col = parser.rule.col || {}, mCol = {}, pCol = {};\n\n        if (!this.options.global)\n            return col;\n\n        if (this.options.global['*']) {\n            mCol = this.options.global['*'].col || {};\n        }\n\n        if (this.options.global[parser.type]) {\n            pCol = this.options.global[parser.type].col || {};\n        }\n        col = deepExtend(deepExtend(deepExtend({}, mCol), pCol), col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n"],"names":["$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","Array","isArray","length","_toString","Object","prototype","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","call","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","indexOf","substr","toArray","isElement","nodeType","deepExtend","origin","isArr","hasOwnProperty","clone","nst","undefined","id","uniqueId","errMsg","i","formCreateName","$FormCreate","FormCreate","components","props","rule","required","default","option","data","formData","buttonProps","resetProps","$f","isShow","unique","render","this","formCreate","methods","_buttonProps","_resetProps","_refresh","watch","n","handle","reloadRule","beforeCreate","$options","propsData","created","api","$emit","mounted","beforeDestroy","$render","clearCacheAll","defVData","class","style","attrs","domProps","on","nativeOn","directives","scopedSlots","slot","ref","VData","init","classList","status","forEach","cls","_this","_data","concat","keys","reduce","initial","_this2","keyList","objList","baseRule","validate","options","col","emit","template","emitPrefix","native","info","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","obj","keyAttrs","attr","objAttrs","opt","arrAttrs","toJson","getRule","_isVue","__inject","__origin","__emit","parseJson","json","parse","k","eval","e","console","error","enumerable","configurable","makerFactory","commonMaker","create","make","createTmp","vm","toMaker","ruleToMaker","rules","map","r","defineProperties","find","findField","model","parseVData","innerHTML","get","getVNode","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","update","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","use","parsers","orgChildren","beforeRender","vn","sortList","renderParser","filter","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","$off","$on","onInput","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","_this3","getFormData","inputVData","child","__fc__","_this4","removeField","fApi","$props","baseApi","h","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","index","root","__field__","splice","reload","__origin__","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","merge","updateValidates","validates","method","Error","args","once","$once","off","trigger","event","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","toValue","isChange","setFormData","toFormValue","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","config","eventName","fieldKey","run","submitBtn","resetBtn","getGlobalApi","$watch","o","deep","immediate","_this5","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","_this6","$nextTick","unWatch","className","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","sumbitBtn","show","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$formCreate","mount","remove","makers","install","_installedFormCreate","BaseForm","mCol","pCol"],"mappings":"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"}